import { g as ga, s as ya, r as ma, a as $a } from "../core-DifZDvrd.js";
import { b as Ra, c as Da, e as Oa, f as Wa, d as ka, d as Ma, h as ja, p as Ia, i as Ua, t as Ha } from "../core-DifZDvrd.js";
var Fr = (() => {
  var M = typeof document < "u" && document.currentScript ? document.currentScript.src : void 0;
  return function(z = {}) {
    var He;
    var l = z, qr, fr;
    l.ready = new Promise((e, r) => {
      qr = e, fr = r;
    });
    var Jr = Object.assign({}, l), Kr = "./this.program", Qr = typeof window == "object", re = typeof Bun < "u", Be = typeof ((He = globalThis.WebAssembly) == null ? void 0 : He.instantiate) == "function", cr = typeof importScripts == "function";
    typeof process == "object" && typeof process.versions == "object" && process.versions.node;
    var j = "";
    function Ne(e) {
      return l.locateFile ? l.locateFile(e, j) : j + e;
    }
    var Sr;
    (Qr || cr || re) && (cr ? j = self.location.href : typeof document < "u" && document.currentScript && (j = document.currentScript.src), M && (j = M), j.startsWith("blob:") ? j = "" : j = j.substr(0, j.replace(/[?#].*/, "").lastIndexOf("/") + 1), cr && (Sr = (e) => {
      var r = new XMLHttpRequest();
      return r.open("GET", e, !1), r.responseType = "arraybuffer", r.send(null), new Uint8Array(r.response);
    }));
    var Le = l.print || console.log.bind(console), X = l.printErr || console.error.bind(console);
    Object.assign(l, Jr), Jr = null, l.arguments && l.arguments, l.thisProgram && (Kr = l.thisProgram), l.quit && l.quit;
    var Q;
    l.wasmBinary && (Q = l.wasmBinary);
    var vr, ee = !1, W, R, G, rr, D, y, te, ne;
    function ae() {
      var e = vr.buffer;
      l.HEAP8 = W = new Int8Array(e), l.HEAP16 = G = new Int16Array(e), l.HEAPU8 = R = new Uint8Array(e), l.HEAPU16 = rr = new Uint16Array(e), l.HEAP32 = D = new Int32Array(e), l.HEAPU32 = y = new Uint32Array(e), l.HEAPF32 = te = new Float32Array(e), l.HEAPF64 = ne = new Float64Array(e);
    }
    var ie = [], se = [], oe = [];
    function ze() {
      if (l.preRun)
        for (typeof l.preRun == "function" && (l.preRun = [l.preRun]); l.preRun.length; )
          Ze(l.preRun.shift());
      Dr(ie);
    }
    function Xe() {
      Dr(se);
    }
    function Ge() {
      if (l.postRun)
        for (typeof l.postRun == "function" && (l.postRun = [l.postRun]); l.postRun.length; )
          Je(l.postRun.shift());
      Dr(oe);
    }
    function Ze(e) {
      ie.unshift(e);
    }
    function qe(e) {
      se.unshift(e);
    }
    function Je(e) {
      oe.unshift(e);
    }
    var B = 0, er = null;
    function Ke(e) {
      var r;
      B++, (r = l.monitorRunDependencies) === null || r === void 0 || r.call(l, B);
    }
    function Qe(e) {
      var r;
      if (B--, (r = l.monitorRunDependencies) === null || r === void 0 || r.call(l, B), B == 0 && er) {
        var t = er;
        er = null, t();
      }
    }
    function Rr(e) {
      var r;
      (r = l.onAbort) === null || r === void 0 || r.call(l, e), e = "Aborted(" + e + ")", X(e), ee = !0, e += ". Build with -sASSERTIONS for more info.";
      var t = new WebAssembly.RuntimeError(e);
      throw fr(t), t;
    }
    var rt = "data:application/octet-stream;base64,", ue = (e) => e.startsWith(rt), Z;
    Z = "zxing_reader.wasm", ue(Z) || (Z = Ne(Z));
    function le(e) {
      if (e == Z && Q)
        return new Uint8Array(Q);
      if (Sr)
        return Sr(e);
      throw "both async and sync fetching of the wasm failed";
    }
    function et(e) {
      return !Q && (Qr || cr || re || Be) && typeof fetch == "function" ? fetch(e, {
        credentials: "same-origin"
      }).then((r) => {
        if (!r.ok)
          throw `failed to load wasm binary file at '${e}'`;
        return r.arrayBuffer();
      }).catch(() => le(e)) : Promise.resolve().then(() => le(e));
    }
    function fe(e, r, t) {
      return et(e).then((n) => WebAssembly.instantiate(n, r)).then(t, (n) => {
        X(`failed to asynchronously prepare wasm: ${n}`), Rr(n);
      });
    }
    function tt(e, r, t, n) {
      return !e && typeof WebAssembly.instantiateStreaming == "function" && !ue(r) && typeof fetch == "function" ? fetch(r, {
        credentials: "same-origin"
      }).then((a) => {
        var i = WebAssembly.instantiateStreaming(a, t);
        return i.then(n, function(s) {
          return X(`wasm streaming compile failed: ${s}`), X("falling back to ArrayBuffer instantiation"), fe(r, t, n);
        });
      }) : fe(r, t, n);
    }
    function nt() {
      var e = {
        a: Zn
      };
      function r(n, a) {
        return w = n.exports, vr = w.ma, ae(), me = w.qa, qe(w.na), Qe(), w;
      }
      Ke();
      function t(n) {
        r(n.instance);
      }
      if (l.instantiateWasm)
        try {
          return l.instantiateWasm(e, r);
        } catch (n) {
          X(`Module.instantiateWasm callback failed with error: ${n}`), fr(n);
        }
      return tt(Q, Z, e, t).catch(fr), {};
    }
    var Dr = (e) => {
      for (; e.length > 0; )
        e.shift()(l);
    };
    l.noExitRuntime;
    var dr = [], pr = 0, at = (e) => {
      var r = new Or(e);
      return r.get_caught() || (r.set_caught(!0), pr--), r.set_rethrown(!1), dr.push(r), ke(r.excPtr), r.get_exception_ptr();
    }, H = 0, it = () => {
      m(0, 0);
      var e = dr.pop();
      We(e.excPtr), H = 0;
    };
    class Or {
      constructor(r) {
        this.excPtr = r, this.ptr = r - 24;
      }
      set_type(r) {
        y[this.ptr + 4 >> 2] = r;
      }
      get_type() {
        return y[this.ptr + 4 >> 2];
      }
      set_destructor(r) {
        y[this.ptr + 8 >> 2] = r;
      }
      get_destructor() {
        return y[this.ptr + 8 >> 2];
      }
      set_caught(r) {
        r = r ? 1 : 0, W[this.ptr + 12] = r;
      }
      get_caught() {
        return W[this.ptr + 12] != 0;
      }
      set_rethrown(r) {
        r = r ? 1 : 0, W[this.ptr + 13] = r;
      }
      get_rethrown() {
        return W[this.ptr + 13] != 0;
      }
      init(r, t) {
        this.set_adjusted_ptr(0), this.set_type(r), this.set_destructor(t);
      }
      set_adjusted_ptr(r) {
        y[this.ptr + 16 >> 2] = r;
      }
      get_adjusted_ptr() {
        return y[this.ptr + 16 >> 2];
      }
      get_exception_ptr() {
        var r = je(this.get_type());
        if (r)
          return y[this.excPtr >> 2];
        var t = this.get_adjusted_ptr();
        return t !== 0 ? t : this.excPtr;
      }
    }
    var st = (e) => {
      throw H || (H = e), H;
    }, Wr = (e) => {
      var r = H;
      if (!r)
        return lr(0), 0;
      var t = new Or(r);
      t.set_adjusted_ptr(r);
      var n = t.get_type();
      if (!n)
        return lr(0), r;
      for (var a in e) {
        var i = e[a];
        if (i === 0 || i === n)
          break;
        var s = t.ptr + 16;
        if (Me(i, n, s))
          return lr(i), r;
      }
      return lr(n), r;
    }, ot = () => Wr([]), ut = (e) => Wr([e]), lt = (e, r) => Wr([e, r]), ft = () => {
      var e = dr.pop();
      e || Rr("no exception to throw");
      var r = e.excPtr;
      throw e.get_rethrown() || (dr.push(e), e.set_rethrown(!0), e.set_caught(!1), pr++), H = r, H;
    }, ct = (e, r, t) => {
      var n = new Or(e);
      throw n.init(r, t), H = e, pr++, H;
    }, vt = () => pr, hr = {}, kr = (e) => {
      for (; e.length; ) {
        var r = e.pop(), t = e.pop();
        t(r);
      }
    };
    function tr(e) {
      return this.fromWireType(y[e >> 2]);
    }
    var q = {}, N = {}, _r = {}, ce, gr = (e) => {
      throw new ce(e);
    }, L = (e, r, t) => {
      e.forEach(function(o) {
        _r[o] = r;
      });
      function n(o) {
        var u = t(o);
        u.length !== e.length && gr("Mismatched type converter count");
        for (var c = 0; c < e.length; ++c)
          I(e[c], u[c]);
      }
      var a = new Array(r.length), i = [], s = 0;
      r.forEach((o, u) => {
        N.hasOwnProperty(o) ? a[u] = N[o] : (i.push(o), q.hasOwnProperty(o) || (q[o] = []), q[o].push(() => {
          a[u] = N[o], ++s, s === i.length && n(a);
        }));
      }), i.length === 0 && n(a);
    }, dt = (e) => {
      var r = hr[e];
      delete hr[e];
      var t = r.rawConstructor, n = r.rawDestructor, a = r.fields, i = a.map((s) => s.getterReturnType).concat(a.map((s) => s.setterArgumentType));
      L([e], i, (s) => {
        var o = {};
        return a.forEach((u, c) => {
          var v = u.fieldName, h = s[c], p = u.getter, _ = u.getterContext, C = s[c + a.length], O = u.setter, $ = u.setterContext;
          o[v] = {
            read: (F) => h.fromWireType(p(_, F)),
            write: (F, f) => {
              var d = [];
              O($, F, C.toWireType(d, f)), kr(d);
            }
          };
        }), [{
          name: r.name,
          fromWireType: (u) => {
            var c = {};
            for (var v in o)
              c[v] = o[v].read(u);
            return n(u), c;
          },
          toWireType: (u, c) => {
            for (var v in o)
              if (!(v in c))
                throw new TypeError(`Missing field: "${v}"`);
            var h = t();
            for (v in o)
              o[v].write(h, c[v]);
            return u !== null && u.push(n, h), h;
          },
          argPackAdvance: U,
          readValueFromPointer: tr,
          destructorFunction: n
        }];
      });
    }, pt = (e, r, t, n, a) => {
    }, ht = () => {
      for (var e = new Array(256), r = 0; r < 256; ++r)
        e[r] = String.fromCharCode(r);
      ve = e;
    }, ve, S = (e) => {
      for (var r = "", t = e; R[t]; )
        r += ve[R[t++]];
      return r;
    }, J, g = (e) => {
      throw new J(e);
    };
    function _t(e, r) {
      let t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var n = r.name;
      if (e || g(`type "${n}" must have a positive integer typeid pointer`), N.hasOwnProperty(e)) {
        if (t.ignoreDuplicateRegistrations)
          return;
        g(`Cannot register type '${n}' twice`);
      }
      if (N[e] = r, delete _r[e], q.hasOwnProperty(e)) {
        var a = q[e];
        delete q[e], a.forEach((i) => i());
      }
    }
    function I(e, r) {
      let t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      if (!("argPackAdvance" in r))
        throw new TypeError("registerType registeredInstance requires argPackAdvance");
      return _t(e, r, t);
    }
    var U = 8, gt = (e, r, t, n) => {
      r = S(r), I(e, {
        name: r,
        fromWireType: function(a) {
          return !!a;
        },
        toWireType: function(a, i) {
          return i ? t : n;
        },
        argPackAdvance: U,
        readValueFromPointer: function(a) {
          return this.fromWireType(R[a]);
        },
        destructorFunction: null
      });
    }, yt = (e) => ({
      count: e.count,
      deleteScheduled: e.deleteScheduled,
      preservePointerOnDelete: e.preservePointerOnDelete,
      ptr: e.ptr,
      ptrType: e.ptrType,
      smartPtr: e.smartPtr,
      smartPtrType: e.smartPtrType
    }), Mr = (e) => {
      function r(t) {
        return t.$$.ptrType.registeredClass.name;
      }
      g(r(e) + " instance already deleted");
    }, jr = !1, de = (e) => {
    }, mt = (e) => {
      e.smartPtr ? e.smartPtrType.rawDestructor(e.smartPtr) : e.ptrType.registeredClass.rawDestructor(e.ptr);
    }, pe = (e) => {
      e.count.value -= 1;
      var r = e.count.value === 0;
      r && mt(e);
    }, he = (e, r, t) => {
      if (r === t)
        return e;
      if (t.baseClass === void 0)
        return null;
      var n = he(e, r, t.baseClass);
      return n === null ? null : t.downcast(n);
    }, _e = {}, $t = () => Object.keys(ir).length, bt = () => {
      var e = [];
      for (var r in ir)
        ir.hasOwnProperty(r) && e.push(ir[r]);
      return e;
    }, nr = [], Ir = () => {
      for (; nr.length; ) {
        var e = nr.pop();
        e.$$.deleteScheduled = !1, e.delete();
      }
    }, ar, wt = (e) => {
      ar = e, nr.length && ar && ar(Ir);
    }, Tt = () => {
      l.getInheritedInstanceCount = $t, l.getLiveInheritedInstances = bt, l.flushPendingDeletes = Ir, l.setDelayFunction = wt;
    }, ir = {}, Pt = (e, r) => {
      for (r === void 0 && g("ptr should not be undefined"); e.baseClass; )
        r = e.upcast(r), e = e.baseClass;
      return r;
    }, Ct = (e, r) => (r = Pt(e, r), ir[r]), yr = (e, r) => {
      (!r.ptrType || !r.ptr) && gr("makeClassHandle requires ptr and ptrType");
      var t = !!r.smartPtrType, n = !!r.smartPtr;
      return t !== n && gr("Both smartPtrType and smartPtr must be specified"), r.count = {
        value: 1
      }, sr(Object.create(e, {
        $$: {
          value: r,
          writable: !0
        }
      }));
    };
    function At(e) {
      var r = this.getPointee(e);
      if (!r)
        return this.destructor(e), null;
      var t = Ct(this.registeredClass, r);
      if (t !== void 0) {
        if (t.$$.count.value === 0)
          return t.$$.ptr = r, t.$$.smartPtr = e, t.clone();
        var n = t.clone();
        return this.destructor(e), n;
      }
      function a() {
        return this.isSmartPointer ? yr(this.registeredClass.instancePrototype, {
          ptrType: this.pointeeType,
          ptr: r,
          smartPtrType: this,
          smartPtr: e
        }) : yr(this.registeredClass.instancePrototype, {
          ptrType: this,
          ptr: e
        });
      }
      var i = this.registeredClass.getActualType(r), s = _e[i];
      if (!s)
        return a.call(this);
      var o;
      this.isConst ? o = s.constPointerType : o = s.pointerType;
      var u = he(r, this.registeredClass, o.registeredClass);
      return u === null ? a.call(this) : this.isSmartPointer ? yr(o.registeredClass.instancePrototype, {
        ptrType: o,
        ptr: u,
        smartPtrType: this,
        smartPtr: e
      }) : yr(o.registeredClass.instancePrototype, {
        ptrType: o,
        ptr: u
      });
    }
    var sr = (e) => typeof FinalizationRegistry > "u" ? (sr = (r) => r, e) : (jr = new FinalizationRegistry((r) => {
      pe(r.$$);
    }), sr = (r) => {
      var t = r.$$, n = !!t.smartPtr;
      if (n) {
        var a = {
          $$: t
        };
        jr.register(r, a, r);
      }
      return r;
    }, de = (r) => jr.unregister(r), sr(e)), Et = () => {
      Object.assign(mr.prototype, {
        isAliasOf(e) {
          if (!(this instanceof mr) || !(e instanceof mr))
            return !1;
          var r = this.$$.ptrType.registeredClass, t = this.$$.ptr;
          e.$$ = e.$$;
          for (var n = e.$$.ptrType.registeredClass, a = e.$$.ptr; r.baseClass; )
            t = r.upcast(t), r = r.baseClass;
          for (; n.baseClass; )
            a = n.upcast(a), n = n.baseClass;
          return r === n && t === a;
        },
        clone() {
          if (this.$$.ptr || Mr(this), this.$$.preservePointerOnDelete)
            return this.$$.count.value += 1, this;
          var e = sr(Object.create(Object.getPrototypeOf(this), {
            $$: {
              value: yt(this.$$)
            }
          }));
          return e.$$.count.value += 1, e.$$.deleteScheduled = !1, e;
        },
        delete() {
          this.$$.ptr || Mr(this), this.$$.deleteScheduled && !this.$$.preservePointerOnDelete && g("Object already scheduled for deletion"), de(this), pe(this.$$), this.$$.preservePointerOnDelete || (this.$$.smartPtr = void 0, this.$$.ptr = void 0);
        },
        isDeleted() {
          return !this.$$.ptr;
        },
        deleteLater() {
          return this.$$.ptr || Mr(this), this.$$.deleteScheduled && !this.$$.preservePointerOnDelete && g("Object already scheduled for deletion"), nr.push(this), nr.length === 1 && ar && ar(Ir), this.$$.deleteScheduled = !0, this;
        }
      });
    };
    function mr() {
    }
    var or = (e, r) => Object.defineProperty(r, "name", {
      value: e
    }), ge = (e, r, t) => {
      if (e[r].overloadTable === void 0) {
        var n = e[r];
        e[r] = function() {
          for (var a = arguments.length, i = new Array(a), s = 0; s < a; s++)
            i[s] = arguments[s];
          return e[r].overloadTable.hasOwnProperty(i.length) || g(`Function '${t}' called with an invalid number of arguments (${i.length}) - expects one of (${e[r].overloadTable})!`), e[r].overloadTable[i.length].apply(this, i);
        }, e[r].overloadTable = [], e[r].overloadTable[n.argCount] = n;
      }
    }, Ur = (e, r, t) => {
      l.hasOwnProperty(e) ? ((t === void 0 || l[e].overloadTable !== void 0 && l[e].overloadTable[t] !== void 0) && g(`Cannot register public name '${e}' twice`), ge(l, e, e), l.hasOwnProperty(t) && g(`Cannot register multiple overloads of a function with the same number of arguments (${t})!`), l[e].overloadTable[t] = r) : (l[e] = r, t !== void 0 && (l[e].numArguments = t));
    }, Ft = 48, St = 57, Rt = (e) => {
      if (e === void 0)
        return "_unknown";
      e = e.replace(/[^a-zA-Z0-9_]/g, "$");
      var r = e.charCodeAt(0);
      return r >= Ft && r <= St ? `_${e}` : e;
    };
    function Dt(e, r, t, n, a, i, s, o) {
      this.name = e, this.constructor = r, this.instancePrototype = t, this.rawDestructor = n, this.baseClass = a, this.getActualType = i, this.upcast = s, this.downcast = o, this.pureVirtualFunctions = [];
    }
    var Hr = (e, r, t) => {
      for (; r !== t; )
        r.upcast || g(`Expected null or instance of ${t.name}, got an instance of ${r.name}`), e = r.upcast(e), r = r.baseClass;
      return e;
    };
    function Ot(e, r) {
      if (r === null)
        return this.isReference && g(`null is not a valid ${this.name}`), 0;
      r.$$ || g(`Cannot pass "${Lr(r)}" as a ${this.name}`), r.$$.ptr || g(`Cannot pass deleted object as a pointer of type ${this.name}`);
      var t = r.$$.ptrType.registeredClass, n = Hr(r.$$.ptr, t, this.registeredClass);
      return n;
    }
    function Wt(e, r) {
      var t;
      if (r === null)
        return this.isReference && g(`null is not a valid ${this.name}`), this.isSmartPointer ? (t = this.rawConstructor(), e !== null && e.push(this.rawDestructor, t), t) : 0;
      (!r || !r.$$) && g(`Cannot pass "${Lr(r)}" as a ${this.name}`), r.$$.ptr || g(`Cannot pass deleted object as a pointer of type ${this.name}`), !this.isConst && r.$$.ptrType.isConst && g(`Cannot convert argument of type ${r.$$.smartPtrType ? r.$$.smartPtrType.name : r.$$.ptrType.name} to parameter type ${this.name}`);
      var n = r.$$.ptrType.registeredClass;
      if (t = Hr(r.$$.ptr, n, this.registeredClass), this.isSmartPointer)
        switch (r.$$.smartPtr === void 0 && g("Passing raw pointer to smart pointer is illegal"), this.sharingPolicy) {
          case 0:
            r.$$.smartPtrType === this ? t = r.$$.smartPtr : g(`Cannot convert argument of type ${r.$$.smartPtrType ? r.$$.smartPtrType.name : r.$$.ptrType.name} to parameter type ${this.name}`);
            break;
          case 1:
            t = r.$$.smartPtr;
            break;
          case 2:
            if (r.$$.smartPtrType === this)
              t = r.$$.smartPtr;
            else {
              var a = r.clone();
              t = this.rawShare(t, V.toHandle(() => a.delete())), e !== null && e.push(this.rawDestructor, t);
            }
            break;
          default:
            g("Unsupporting sharing policy");
        }
      return t;
    }
    function kt(e, r) {
      if (r === null)
        return this.isReference && g(`null is not a valid ${this.name}`), 0;
      r.$$ || g(`Cannot pass "${Lr(r)}" as a ${this.name}`), r.$$.ptr || g(`Cannot pass deleted object as a pointer of type ${this.name}`), r.$$.ptrType.isConst && g(`Cannot convert argument of type ${r.$$.ptrType.name} to parameter type ${this.name}`);
      var t = r.$$.ptrType.registeredClass, n = Hr(r.$$.ptr, t, this.registeredClass);
      return n;
    }
    var Mt = () => {
      Object.assign($r.prototype, {
        getPointee(e) {
          return this.rawGetPointee && (e = this.rawGetPointee(e)), e;
        },
        destructor(e) {
          var r;
          (r = this.rawDestructor) === null || r === void 0 || r.call(this, e);
        },
        argPackAdvance: U,
        readValueFromPointer: tr,
        fromWireType: At
      });
    };
    function $r(e, r, t, n, a, i, s, o, u, c, v) {
      this.name = e, this.registeredClass = r, this.isReference = t, this.isConst = n, this.isSmartPointer = a, this.pointeeType = i, this.sharingPolicy = s, this.rawGetPointee = o, this.rawConstructor = u, this.rawShare = c, this.rawDestructor = v, !a && r.baseClass === void 0 ? n ? (this.toWireType = Ot, this.destructorFunction = null) : (this.toWireType = kt, this.destructorFunction = null) : this.toWireType = Wt;
    }
    var ye = (e, r, t) => {
      l.hasOwnProperty(e) || gr("Replacing nonexistent public symbol"), l[e].overloadTable !== void 0 && t !== void 0 ? l[e].overloadTable[t] = r : (l[e] = r, l[e].argCount = t);
    }, jt = (e, r, t) => {
      var n = l["dynCall_" + e];
      return n(r, ...t);
    }, br = [], me, b = (e) => {
      var r = br[e];
      return r || (e >= br.length && (br.length = e + 1), br[e] = r = me.get(e)), r;
    }, It = function(e, r) {
      let t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      if (e.includes("j"))
        return jt(e, r, t);
      var n = b(r)(...t);
      return n;
    }, Ut = (e, r) => function() {
      for (var t = arguments.length, n = new Array(t), a = 0; a < t; a++)
        n[a] = arguments[a];
      return It(e, r, n);
    }, k = (e, r) => {
      e = S(e);
      function t() {
        return e.includes("j") ? Ut(e, r) : b(r);
      }
      var n = t();
      return typeof n != "function" && g(`unknown function pointer with signature ${e}: ${r}`), n;
    }, Ht = (e, r) => {
      var t = or(r, function(n) {
        this.name = r, this.message = n;
        var a = new Error(n).stack;
        a !== void 0 && (this.stack = this.toString() + `
` + a.replace(/^Error(:[^\n]*)?\n/, ""));
      });
      return t.prototype = Object.create(e.prototype), t.prototype.constructor = t, t.prototype.toString = function() {
        return this.message === void 0 ? this.name : `${this.name}: ${this.message}`;
      }, t;
    }, $e, be = (e) => {
      var r = Oe(e), t = S(r);
      return Y(r), t;
    }, wr = (e, r) => {
      var t = [], n = {};
      function a(i) {
        if (!n[i] && !N[i]) {
          if (_r[i]) {
            _r[i].forEach(a);
            return;
          }
          t.push(i), n[i] = !0;
        }
      }
      throw r.forEach(a), new $e(`${e}: ` + t.map(be).join([", "]));
    }, xt = (e, r, t, n, a, i, s, o, u, c, v, h, p) => {
      v = S(v), i = k(a, i), o && (o = k(s, o)), c && (c = k(u, c)), p = k(h, p);
      var _ = Rt(v);
      Ur(_, function() {
        wr(`Cannot construct ${v} due to unbound types`, [n]);
      }), L([e, r, t], n ? [n] : [], (C) => {
        C = C[0];
        var O, $;
        n ? (O = C.registeredClass, $ = O.instancePrototype) : $ = mr.prototype;
        var F = or(v, function() {
          if (Object.getPrototypeOf(this) !== f)
            throw new J("Use 'new' to construct " + v);
          if (d.constructor_body === void 0)
            throw new J(v + " has no accessible constructor");
          for (var Ve = arguments.length, Ar = new Array(Ve), Er = 0; Er < Ve; Er++)
            Ar[Er] = arguments[Er];
          var Ye = d.constructor_body[Ar.length];
          if (Ye === void 0)
            throw new J(`Tried to invoke ctor of ${v} with invalid number of parameters (${Ar.length}) - expected (${Object.keys(d.constructor_body).toString()}) parameters instead!`);
          return Ye.apply(this, Ar);
        }), f = Object.create($, {
          constructor: {
            value: F
          }
        });
        F.prototype = f;
        var d = new Dt(v, F, f, p, O, i, o, c);
        if (d.baseClass) {
          var A, E;
          (E = (A = d.baseClass).__derivedClasses) !== null && E !== void 0 || (A.__derivedClasses = []), d.baseClass.__derivedClasses.push(d);
        }
        var K = new $r(v, d, !0, !1, !1), Cr = new $r(v + "*", d, !1, !1, !1), xe = new $r(v + " const*", d, !1, !0, !1);
        return _e[e] = {
          pointerType: Cr,
          constPointerType: xe
        }, ye(_, F), [K, Cr, xe];
      });
    }, xr = (e, r) => {
      for (var t = [], n = 0; n < e; n++)
        t.push(y[r + n * 4 >> 2]);
      return t;
    };
    function Vt(e) {
      for (var r = 1; r < e.length; ++r)
        if (e[r] !== null && e[r].destructorFunction === void 0)
          return !0;
      return !1;
    }
    function Vr(e, r, t, n, a, i) {
      var s = r.length;
      s < 2 && g("argTypes array size mismatch! Must at least get return value and 'this' types!");
      var o = r[1] !== null && t !== null, u = Vt(r), c = r[0].name !== "void", v = s - 2, h = new Array(v), p = [], _ = [], C = function() {
        arguments.length !== v && g(`function ${e} called with ${arguments.length} arguments, expected ${v}`), _.length = 0;
        var O;
        p.length = o ? 2 : 1, p[0] = a, o && (O = r[1].toWireType(_, this), p[1] = O);
        for (var $ = 0; $ < v; ++$)
          h[$] = r[$ + 2].toWireType(_, $ < 0 || arguments.length <= $ ? void 0 : arguments[$]), p.push(h[$]);
        var F = n(...p);
        function f(d) {
          if (u)
            kr(_);
          else
            for (var A = o ? 1 : 2; A < r.length; A++) {
              var E = A === 1 ? O : h[A - 2];
              r[A].destructorFunction !== null && r[A].destructorFunction(E);
            }
          if (c)
            return r[0].fromWireType(d);
        }
        return f(F);
      };
      return or(e, C);
    }
    var Yt = (e, r, t, n, a, i) => {
      var s = xr(r, t);
      a = k(n, a), L([], [e], (o) => {
        o = o[0];
        var u = `constructor ${o.name}`;
        if (o.registeredClass.constructor_body === void 0 && (o.registeredClass.constructor_body = []), o.registeredClass.constructor_body[r - 1] !== void 0)
          throw new J(`Cannot register multiple constructors with identical number of parameters (${r - 1}) for class '${o.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);
        return o.registeredClass.constructor_body[r - 1] = () => {
          wr(`Cannot construct ${o.name} due to unbound types`, s);
        }, L([], s, (c) => (c.splice(1, 0, null), o.registeredClass.constructor_body[r - 1] = Vr(u, c, null, a, i), [])), [];
      });
    }, we = (e) => {
      e = e.trim();
      const r = e.indexOf("(");
      return r !== -1 ? e.substr(0, r) : e;
    }, Bt = (e, r, t, n, a, i, s, o, u) => {
      var c = xr(t, n);
      r = S(r), r = we(r), i = k(a, i), L([], [e], (v) => {
        v = v[0];
        var h = `${v.name}.${r}`;
        r.startsWith("@@") && (r = Symbol[r.substring(2)]), o && v.registeredClass.pureVirtualFunctions.push(r);
        function p() {
          wr(`Cannot call ${h} due to unbound types`, c);
        }
        var _ = v.registeredClass.instancePrototype, C = _[r];
        return C === void 0 || C.overloadTable === void 0 && C.className !== v.name && C.argCount === t - 2 ? (p.argCount = t - 2, p.className = v.name, _[r] = p) : (ge(_, r, h), _[r].overloadTable[t - 2] = p), L([], c, (O) => {
          var $ = Vr(h, O, v, i, s);
          return _[r].overloadTable === void 0 ? ($.argCount = t - 2, _[r] = $) : _[r].overloadTable[t - 2] = $, [];
        }), [];
      });
    }, Yr = [], x = [], Br = (e) => {
      e > 9 && --x[e + 1] === 0 && (x[e] = void 0, Yr.push(e));
    }, Nt = () => x.length / 2 - 5 - Yr.length, Lt = () => {
      x.push(0, 1, void 0, 1, null, 1, !0, 1, !1, 1), l.count_emval_handles = Nt;
    }, V = {
      toValue: (e) => (e || g("Cannot use deleted val. handle = " + e), x[e]),
      toHandle: (e) => {
        switch (e) {
          case void 0:
            return 2;
          case null:
            return 4;
          case !0:
            return 6;
          case !1:
            return 8;
          default: {
            const r = Yr.pop() || x.length;
            return x[r] = e, x[r + 1] = 1, r;
          }
        }
      }
    }, zt = {
      name: "emscripten::val",
      fromWireType: (e) => {
        var r = V.toValue(e);
        return Br(e), r;
      },
      toWireType: (e, r) => V.toHandle(r),
      argPackAdvance: U,
      readValueFromPointer: tr,
      destructorFunction: null
    }, Te = (e) => I(e, zt), Xt = (e, r, t) => {
      switch (r) {
        case 1:
          return t ? function(n) {
            return this.fromWireType(W[n]);
          } : function(n) {
            return this.fromWireType(R[n]);
          };
        case 2:
          return t ? function(n) {
            return this.fromWireType(G[n >> 1]);
          } : function(n) {
            return this.fromWireType(rr[n >> 1]);
          };
        case 4:
          return t ? function(n) {
            return this.fromWireType(D[n >> 2]);
          } : function(n) {
            return this.fromWireType(y[n >> 2]);
          };
        default:
          throw new TypeError(`invalid integer width (${r}): ${e}`);
      }
    }, Gt = (e, r, t, n) => {
      r = S(r);
      function a() {
      }
      a.values = {}, I(e, {
        name: r,
        constructor: a,
        fromWireType: function(i) {
          return this.constructor.values[i];
        },
        toWireType: (i, s) => s.value,
        argPackAdvance: U,
        readValueFromPointer: Xt(r, t, n),
        destructorFunction: null
      }), Ur(r, a);
    }, Nr = (e, r) => {
      var t = N[e];
      return t === void 0 && g(`${r} has unknown type ${be(e)}`), t;
    }, Zt = (e, r, t) => {
      var n = Nr(e, "enum");
      r = S(r);
      var a = n.constructor, i = Object.create(n.constructor.prototype, {
        value: {
          value: t
        },
        constructor: {
          value: or(`${n.name}_${r}`, function() {
          })
        }
      });
      a.values[t] = i, a[r] = i;
    }, Lr = (e) => {
      if (e === null)
        return "null";
      var r = typeof e;
      return r === "object" || r === "array" || r === "function" ? e.toString() : "" + e;
    }, qt = (e, r) => {
      switch (r) {
        case 4:
          return function(t) {
            return this.fromWireType(te[t >> 2]);
          };
        case 8:
          return function(t) {
            return this.fromWireType(ne[t >> 3]);
          };
        default:
          throw new TypeError(`invalid float width (${r}): ${e}`);
      }
    }, Jt = (e, r, t) => {
      r = S(r), I(e, {
        name: r,
        fromWireType: (n) => n,
        toWireType: (n, a) => a,
        argPackAdvance: U,
        readValueFromPointer: qt(r, t),
        destructorFunction: null
      });
    }, Kt = (e, r, t, n, a, i, s) => {
      var o = xr(r, t);
      e = S(e), e = we(e), a = k(n, a), Ur(e, function() {
        wr(`Cannot call ${e} due to unbound types`, o);
      }, r - 1), L([], o, (u) => {
        var c = [u[0], null].concat(u.slice(1));
        return ye(e, Vr(e, c, null, a, i), r - 1), [];
      });
    }, Qt = (e, r, t) => {
      switch (r) {
        case 1:
          return t ? (n) => W[n] : (n) => R[n];
        case 2:
          return t ? (n) => G[n >> 1] : (n) => rr[n >> 1];
        case 4:
          return t ? (n) => D[n >> 2] : (n) => y[n >> 2];
        default:
          throw new TypeError(`invalid integer width (${r}): ${e}`);
      }
    }, rn = (e, r, t, n, a) => {
      r = S(r);
      var i = (v) => v;
      if (n === 0) {
        var s = 32 - 8 * t;
        i = (v) => v << s >>> s;
      }
      var o = r.includes("unsigned"), u = (v, h) => {
      }, c;
      o ? c = function(v, h) {
        return u(h, this.name), h >>> 0;
      } : c = function(v, h) {
        return u(h, this.name), h;
      }, I(e, {
        name: r,
        fromWireType: i,
        toWireType: c,
        argPackAdvance: U,
        readValueFromPointer: Qt(r, t, n !== 0),
        destructorFunction: null
      });
    }, en = (e, r, t) => {
      var n = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array], a = n[r];
      function i(s) {
        var o = y[s >> 2], u = y[s + 4 >> 2];
        return new a(W.buffer, u, o);
      }
      t = S(t), I(e, {
        name: t,
        fromWireType: i,
        argPackAdvance: U,
        readValueFromPointer: i
      }, {
        ignoreDuplicateRegistrations: !0
      });
    }, tn = (e, r) => {
      Te(e);
    }, Pe = (e, r, t, n) => {
      if (!(n > 0))
        return 0;
      for (var a = t, i = t + n - 1, s = 0; s < e.length; ++s) {
        var o = e.charCodeAt(s);
        if (o >= 55296 && o <= 57343) {
          var u = e.charCodeAt(++s);
          o = 65536 + ((o & 1023) << 10) | u & 1023;
        }
        if (o <= 127) {
          if (t >= i)
            break;
          r[t++] = o;
        } else if (o <= 2047) {
          if (t + 1 >= i)
            break;
          r[t++] = 192 | o >> 6, r[t++] = 128 | o & 63;
        } else if (o <= 65535) {
          if (t + 2 >= i)
            break;
          r[t++] = 224 | o >> 12, r[t++] = 128 | o >> 6 & 63, r[t++] = 128 | o & 63;
        } else {
          if (t + 3 >= i)
            break;
          r[t++] = 240 | o >> 18, r[t++] = 128 | o >> 12 & 63, r[t++] = 128 | o >> 6 & 63, r[t++] = 128 | o & 63;
        }
      }
      return r[t] = 0, t - a;
    }, nn = (e, r, t) => Pe(e, R, r, t), Ce = (e) => {
      for (var r = 0, t = 0; t < e.length; ++t) {
        var n = e.charCodeAt(t);
        n <= 127 ? r++ : n <= 2047 ? r += 2 : n >= 55296 && n <= 57343 ? (r += 4, ++t) : r += 3;
      }
      return r;
    }, Ae = typeof TextDecoder < "u" ? new TextDecoder("utf8") : void 0, Ee = (e, r, t) => {
      for (var n = r + t, a = r; e[a] && !(a >= n); )
        ++a;
      if (a - r > 16 && e.buffer && Ae)
        return Ae.decode(e.subarray(r, a));
      for (var i = ""; r < a; ) {
        var s = e[r++];
        if (!(s & 128)) {
          i += String.fromCharCode(s);
          continue;
        }
        var o = e[r++] & 63;
        if ((s & 224) == 192) {
          i += String.fromCharCode((s & 31) << 6 | o);
          continue;
        }
        var u = e[r++] & 63;
        if ((s & 240) == 224 ? s = (s & 15) << 12 | o << 6 | u : s = (s & 7) << 18 | o << 12 | u << 6 | e[r++] & 63, s < 65536)
          i += String.fromCharCode(s);
        else {
          var c = s - 65536;
          i += String.fromCharCode(55296 | c >> 10, 56320 | c & 1023);
        }
      }
      return i;
    }, zr = (e, r) => e ? Ee(R, e, r) : "", an = (e, r) => {
      r = S(r);
      var t = r === "std::string";
      I(e, {
        name: r,
        fromWireType(n) {
          var a = y[n >> 2], i = n + 4, s;
          if (t)
            for (var o = i, u = 0; u <= a; ++u) {
              var c = i + u;
              if (u == a || R[c] == 0) {
                var v = c - o, h = zr(o, v);
                s === void 0 ? s = h : (s += "\0", s += h), o = c + 1;
              }
            }
          else {
            for (var p = new Array(a), u = 0; u < a; ++u)
              p[u] = String.fromCharCode(R[i + u]);
            s = p.join("");
          }
          return Y(n), s;
        },
        toWireType(n, a) {
          a instanceof ArrayBuffer && (a = new Uint8Array(a));
          var i, s = typeof a == "string";
          s || a instanceof Uint8Array || a instanceof Uint8ClampedArray || a instanceof Int8Array || g("Cannot pass non-string to std::string"), t && s ? i = Ce(a) : i = a.length;
          var o = Zr(4 + i + 1), u = o + 4;
          if (y[o >> 2] = i, t && s)
            nn(a, u, i + 1);
          else if (s)
            for (var c = 0; c < i; ++c) {
              var v = a.charCodeAt(c);
              v > 255 && (Y(u), g("String has UTF-16 code units that do not fit in 8 bits")), R[u + c] = v;
            }
          else
            for (var c = 0; c < i; ++c)
              R[u + c] = a[c];
          return n !== null && n.push(Y, o), o;
        },
        argPackAdvance: U,
        readValueFromPointer: tr,
        destructorFunction(n) {
          Y(n);
        }
      });
    }, Fe = typeof TextDecoder < "u" ? new TextDecoder("utf-16le") : void 0, sn = (e, r) => {
      for (var t = e, n = t >> 1, a = n + r / 2; !(n >= a) && rr[n]; )
        ++n;
      if (t = n << 1, t - e > 32 && Fe)
        return Fe.decode(R.subarray(e, t));
      for (var i = "", s = 0; !(s >= r / 2); ++s) {
        var o = G[e + s * 2 >> 1];
        if (o == 0)
          break;
        i += String.fromCharCode(o);
      }
      return i;
    }, on = (e, r, t) => {
      var n;
      if ((n = t) !== null && n !== void 0 || (t = 2147483647), t < 2)
        return 0;
      t -= 2;
      for (var a = r, i = t < e.length * 2 ? t / 2 : e.length, s = 0; s < i; ++s) {
        var o = e.charCodeAt(s);
        G[r >> 1] = o, r += 2;
      }
      return G[r >> 1] = 0, r - a;
    }, un = (e) => e.length * 2, ln = (e, r) => {
      for (var t = 0, n = ""; !(t >= r / 4); ) {
        var a = D[e + t * 4 >> 2];
        if (a == 0)
          break;
        if (++t, a >= 65536) {
          var i = a - 65536;
          n += String.fromCharCode(55296 | i >> 10, 56320 | i & 1023);
        } else
          n += String.fromCharCode(a);
      }
      return n;
    }, fn = (e, r, t) => {
      var n;
      if ((n = t) !== null && n !== void 0 || (t = 2147483647), t < 4)
        return 0;
      for (var a = r, i = a + t - 4, s = 0; s < e.length; ++s) {
        var o = e.charCodeAt(s);
        if (o >= 55296 && o <= 57343) {
          var u = e.charCodeAt(++s);
          o = 65536 + ((o & 1023) << 10) | u & 1023;
        }
        if (D[r >> 2] = o, r += 4, r + 4 > i)
          break;
      }
      return D[r >> 2] = 0, r - a;
    }, cn = (e) => {
      for (var r = 0, t = 0; t < e.length; ++t) {
        var n = e.charCodeAt(t);
        n >= 55296 && n <= 57343 && ++t, r += 4;
      }
      return r;
    }, vn = (e, r, t) => {
      t = S(t);
      var n, a, i, s;
      r === 2 ? (n = sn, a = on, s = un, i = (o) => rr[o >> 1]) : r === 4 && (n = ln, a = fn, s = cn, i = (o) => y[o >> 2]), I(e, {
        name: t,
        fromWireType: (o) => {
          for (var u = y[o >> 2], c, v = o + 4, h = 0; h <= u; ++h) {
            var p = o + 4 + h * r;
            if (h == u || i(p) == 0) {
              var _ = p - v, C = n(v, _);
              c === void 0 ? c = C : (c += "\0", c += C), v = p + r;
            }
          }
          return Y(o), c;
        },
        toWireType: (o, u) => {
          typeof u != "string" && g(`Cannot pass non-string to C++ string type ${t}`);
          var c = s(u), v = Zr(4 + c + r);
          return y[v >> 2] = c / r, a(u, v + 4, c + r), o !== null && o.push(Y, v), v;
        },
        argPackAdvance: U,
        readValueFromPointer: tr,
        destructorFunction(o) {
          Y(o);
        }
      });
    }, dn = (e, r, t, n, a, i) => {
      hr[e] = {
        name: S(r),
        rawConstructor: k(t, n),
        rawDestructor: k(a, i),
        fields: []
      };
    }, pn = (e, r, t, n, a, i, s, o, u, c) => {
      hr[e].fields.push({
        fieldName: S(r),
        getterReturnType: t,
        getter: k(n, a),
        getterContext: i,
        setterArgumentType: s,
        setter: k(o, u),
        setterContext: c
      });
    }, hn = (e, r) => {
      r = S(r), I(e, {
        isVoid: !0,
        name: r,
        argPackAdvance: 0,
        fromWireType: () => {
        },
        toWireType: (t, n) => {
        }
      });
    }, Xr = [], _n = (e, r, t, n) => (e = Xr[e], r = V.toValue(r), e(null, r, t, n)), gn = {}, yn = (e) => {
      var r = gn[e];
      return r === void 0 ? S(e) : r;
    }, Se = () => {
      if (typeof globalThis == "object")
        return globalThis;
      function e(r) {
        r.$$$embind_global$$$ = r;
        var t = typeof $$$embind_global$$$ == "object" && r.$$$embind_global$$$ == r;
        return t || delete r.$$$embind_global$$$, t;
      }
      if (typeof $$$embind_global$$$ == "object" || (typeof global == "object" && e(global) ? $$$embind_global$$$ = global : typeof self == "object" && e(self) && ($$$embind_global$$$ = self), typeof $$$embind_global$$$ == "object"))
        return $$$embind_global$$$;
      throw Error("unable to get global object.");
    }, mn = (e) => e === 0 ? V.toHandle(Se()) : (e = yn(e), V.toHandle(Se()[e])), $n = (e) => {
      var r = Xr.length;
      return Xr.push(e), r;
    }, bn = (e, r) => {
      for (var t = new Array(e), n = 0; n < e; ++n)
        t[n] = Nr(y[r + n * 4 >> 2], "parameter " + n);
      return t;
    }, wn = Reflect.construct, Tn = (e, r, t) => {
      var n = [], a = e.toWireType(n, t);
      return n.length && (y[r >> 2] = V.toHandle(n)), a;
    }, Pn = (e, r, t) => {
      var n = bn(e, r), a = n.shift();
      e--;
      var i = new Array(e), s = (u, c, v, h) => {
        for (var p = 0, _ = 0; _ < e; ++_)
          i[_] = n[_].readValueFromPointer(h + p), p += n[_].argPackAdvance;
        var C = t === 1 ? wn(c, i) : c.apply(u, i);
        return Tn(a, v, C);
      }, o = `methodCaller<(${n.map((u) => u.name).join(", ")}) => ${a.name}>`;
      return $n(or(o, s));
    }, Cn = (e) => {
      e > 9 && (x[e + 1] += 1);
    }, An = (e) => {
      var r = V.toValue(e);
      kr(r), Br(e);
    }, En = (e, r) => {
      e = Nr(e, "_emval_take_value");
      var t = e.readValueFromPointer(r);
      return V.toHandle(t);
    }, Fn = () => {
      Rr("");
    }, Sn = (e, r, t) => R.copyWithin(e, r, r + t), Rn = () => 2147483648, Dn = (e) => {
      var r = vr.buffer, t = (e - r.byteLength + 65535) / 65536;
      try {
        return vr.grow(t), ae(), 1;
      } catch {
      }
    }, On = (e) => {
      var r = R.length;
      e >>>= 0;
      var t = Rn();
      if (e > t)
        return !1;
      for (var n = (u, c) => u + (c - u % c) % c, a = 1; a <= 4; a *= 2) {
        var i = r * (1 + 0.2 / a);
        i = Math.min(i, e + 100663296);
        var s = Math.min(t, n(Math.max(e, i), 65536)), o = Dn(s);
        if (o)
          return !0;
      }
      return !1;
    }, Gr = {}, Wn = () => Kr || "./this.program", ur = () => {
      if (!ur.strings) {
        var e = (typeof navigator == "object" && navigator.languages && navigator.languages[0] || "C").replace("-", "_") + ".UTF-8", r = {
          USER: "web_user",
          LOGNAME: "web_user",
          PATH: "/",
          PWD: "/",
          HOME: "/home/web_user",
          LANG: e,
          _: Wn()
        };
        for (var t in Gr)
          Gr[t] === void 0 ? delete r[t] : r[t] = Gr[t];
        var n = [];
        for (var t in r)
          n.push(`${t}=${r[t]}`);
        ur.strings = n;
      }
      return ur.strings;
    }, kn = (e, r) => {
      for (var t = 0; t < e.length; ++t)
        W[r++] = e.charCodeAt(t);
      W[r] = 0;
    }, Mn = (e, r) => {
      var t = 0;
      return ur().forEach((n, a) => {
        var i = r + t;
        y[e + a * 4 >> 2] = i, kn(n, i), t += n.length + 1;
      }), 0;
    }, jn = (e, r) => {
      var t = ur();
      y[e >> 2] = t.length;
      var n = 0;
      return t.forEach((a) => n += a.length + 1), y[r >> 2] = n, 0;
    }, In = (e) => 52;
    function Un(e, r, t, n, a) {
      return 70;
    }
    var Hn = [null, [], []], xn = (e, r) => {
      var t = Hn[e];
      r === 0 || r === 10 ? ((e === 1 ? Le : X)(Ee(t, 0)), t.length = 0) : t.push(r);
    }, Vn = (e, r, t, n) => {
      for (var a = 0, i = 0; i < t; i++) {
        var s = y[r >> 2], o = y[r + 4 >> 2];
        r += 8;
        for (var u = 0; u < o; u++)
          xn(e, R[s + u]);
        a += o;
      }
      return y[n >> 2] = a, 0;
    }, Yn = (e) => e, Tr = (e) => e % 4 === 0 && (e % 100 !== 0 || e % 400 === 0), Bn = (e, r) => {
      for (var t = 0, n = 0; n <= r; t += e[n++])
        ;
      return t;
    }, Re = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], De = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], Nn = (e, r) => {
      for (var t = new Date(e.getTime()); r > 0; ) {
        var n = Tr(t.getFullYear()), a = t.getMonth(), i = (n ? Re : De)[a];
        if (r > i - t.getDate())
          r -= i - t.getDate() + 1, t.setDate(1), a < 11 ? t.setMonth(a + 1) : (t.setMonth(0), t.setFullYear(t.getFullYear() + 1));
        else
          return t.setDate(t.getDate() + r), t;
      }
      return t;
    };
    function Ln(e, r, t) {
      var n = t > 0 ? t : Ce(e) + 1, a = new Array(n), i = Pe(e, a, 0, a.length);
      return r && (a.length = i), a;
    }
    var zn = (e, r) => {
      W.set(e, r);
    }, Xn = (e, r, t, n) => {
      var a = y[n + 40 >> 2], i = {
        tm_sec: D[n >> 2],
        tm_min: D[n + 4 >> 2],
        tm_hour: D[n + 8 >> 2],
        tm_mday: D[n + 12 >> 2],
        tm_mon: D[n + 16 >> 2],
        tm_year: D[n + 20 >> 2],
        tm_wday: D[n + 24 >> 2],
        tm_yday: D[n + 28 >> 2],
        tm_isdst: D[n + 32 >> 2],
        tm_gmtoff: D[n + 36 >> 2],
        tm_zone: a ? zr(a) : ""
      }, s = zr(t), o = {
        "%c": "%a %b %d %H:%M:%S %Y",
        "%D": "%m/%d/%y",
        "%F": "%Y-%m-%d",
        "%h": "%b",
        "%r": "%I:%M:%S %p",
        "%R": "%H:%M",
        "%T": "%H:%M:%S",
        "%x": "%m/%d/%y",
        "%X": "%H:%M:%S",
        "%Ec": "%c",
        "%EC": "%C",
        "%Ex": "%m/%d/%y",
        "%EX": "%H:%M:%S",
        "%Ey": "%y",
        "%EY": "%Y",
        "%Od": "%d",
        "%Oe": "%e",
        "%OH": "%H",
        "%OI": "%I",
        "%Om": "%m",
        "%OM": "%M",
        "%OS": "%S",
        "%Ou": "%u",
        "%OU": "%U",
        "%OV": "%V",
        "%Ow": "%w",
        "%OW": "%W",
        "%Oy": "%y"
      };
      for (var u in o)
        s = s.replace(new RegExp(u, "g"), o[u]);
      var c = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], v = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
      function h(f, d, A) {
        for (var E = typeof f == "number" ? f.toString() : f || ""; E.length < d; )
          E = A[0] + E;
        return E;
      }
      function p(f, d) {
        return h(f, d, "0");
      }
      function _(f, d) {
        function A(K) {
          return K < 0 ? -1 : K > 0 ? 1 : 0;
        }
        var E;
        return (E = A(f.getFullYear() - d.getFullYear())) === 0 && (E = A(f.getMonth() - d.getMonth())) === 0 && (E = A(f.getDate() - d.getDate())), E;
      }
      function C(f) {
        switch (f.getDay()) {
          case 0:
            return new Date(f.getFullYear() - 1, 11, 29);
          case 1:
            return f;
          case 2:
            return new Date(f.getFullYear(), 0, 3);
          case 3:
            return new Date(f.getFullYear(), 0, 2);
          case 4:
            return new Date(f.getFullYear(), 0, 1);
          case 5:
            return new Date(f.getFullYear() - 1, 11, 31);
          case 6:
            return new Date(f.getFullYear() - 1, 11, 30);
        }
      }
      function O(f) {
        var d = Nn(new Date(f.tm_year + 1900, 0, 1), f.tm_yday), A = new Date(d.getFullYear(), 0, 4), E = new Date(d.getFullYear() + 1, 0, 4), K = C(A), Cr = C(E);
        return _(K, d) <= 0 ? _(Cr, d) <= 0 ? d.getFullYear() + 1 : d.getFullYear() : d.getFullYear() - 1;
      }
      var $ = {
        "%a": (f) => c[f.tm_wday].substring(0, 3),
        "%A": (f) => c[f.tm_wday],
        "%b": (f) => v[f.tm_mon].substring(0, 3),
        "%B": (f) => v[f.tm_mon],
        "%C": (f) => {
          var d = f.tm_year + 1900;
          return p(d / 100 | 0, 2);
        },
        "%d": (f) => p(f.tm_mday, 2),
        "%e": (f) => h(f.tm_mday, 2, " "),
        "%g": (f) => O(f).toString().substring(2),
        "%G": O,
        "%H": (f) => p(f.tm_hour, 2),
        "%I": (f) => {
          var d = f.tm_hour;
          return d == 0 ? d = 12 : d > 12 && (d -= 12), p(d, 2);
        },
        "%j": (f) => p(f.tm_mday + Bn(Tr(f.tm_year + 1900) ? Re : De, f.tm_mon - 1), 3),
        "%m": (f) => p(f.tm_mon + 1, 2),
        "%M": (f) => p(f.tm_min, 2),
        "%n": () => `
`,
        "%p": (f) => f.tm_hour >= 0 && f.tm_hour < 12 ? "AM" : "PM",
        "%S": (f) => p(f.tm_sec, 2),
        "%t": () => "	",
        "%u": (f) => f.tm_wday || 7,
        "%U": (f) => {
          var d = f.tm_yday + 7 - f.tm_wday;
          return p(Math.floor(d / 7), 2);
        },
        "%V": (f) => {
          var d = Math.floor((f.tm_yday + 7 - (f.tm_wday + 6) % 7) / 7);
          if ((f.tm_wday + 371 - f.tm_yday - 2) % 7 <= 2 && d++, d) {
            if (d == 53) {
              var E = (f.tm_wday + 371 - f.tm_yday) % 7;
              E != 4 && (E != 3 || !Tr(f.tm_year)) && (d = 1);
            }
          } else {
            d = 52;
            var A = (f.tm_wday + 7 - f.tm_yday - 1) % 7;
            (A == 4 || A == 5 && Tr(f.tm_year % 400 - 1)) && d++;
          }
          return p(d, 2);
        },
        "%w": (f) => f.tm_wday,
        "%W": (f) => {
          var d = f.tm_yday + 7 - (f.tm_wday + 6) % 7;
          return p(Math.floor(d / 7), 2);
        },
        "%y": (f) => (f.tm_year + 1900).toString().substring(2),
        "%Y": (f) => f.tm_year + 1900,
        "%z": (f) => {
          var d = f.tm_gmtoff, A = d >= 0;
          return d = Math.abs(d) / 60, d = d / 60 * 100 + d % 60, (A ? "+" : "-") + ("0000" + d).slice(-4);
        },
        "%Z": (f) => f.tm_zone,
        "%%": () => "%"
      };
      s = s.replace(/%%/g, "\0\0");
      for (var u in $)
        s.includes(u) && (s = s.replace(new RegExp(u, "g"), $[u](i)));
      s = s.replace(/\0\0/g, "%");
      var F = Ln(s, !1);
      return F.length > r ? 0 : (zn(F, e), F.length - 1);
    }, Gn = (e, r, t, n, a) => Xn(e, r, t, n);
    ce = l.InternalError = class extends Error {
      constructor(r) {
        super(r), this.name = "InternalError";
      }
    }, ht(), J = l.BindingError = class extends Error {
      constructor(r) {
        super(r), this.name = "BindingError";
      }
    }, Et(), Tt(), Mt(), $e = l.UnboundTypeError = Ht(Error, "UnboundTypeError"), Lt();
    var Zn = {
      s: at,
      u: it,
      b: ot,
      g: ut,
      q: lt,
      K: ft,
      f: ct,
      Y: vt,
      e: st,
      ha: dt,
      U: pt,
      ba: gt,
      fa: xt,
      ea: Yt,
      w: Bt,
      aa: Te,
      x: Gt,
      h: Zt,
      O: Jt,
      P: Kt,
      t: rn,
      o: en,
      ga: tn,
      N: an,
      C: vn,
      A: dn,
      ia: pn,
      ca: hn,
      E: _n,
      ka: Br,
      la: mn,
      M: Pn,
      Q: Cn,
      R: An,
      da: En,
      B: Fn,
      $: Sn,
      Z: On,
      W: Mn,
      X: jn,
      _: In,
      T: Un,
      L: Vn,
      F: ca,
      D: ra,
      G: fa,
      m: va,
      a: qn,
      d: ta,
      p: Qn,
      k: la,
      I: oa,
      v: ia,
      H: ua,
      z: pa,
      S: _a,
      l: na,
      j: ea,
      c: Kn,
      n: Jn,
      J: sa,
      r: da,
      i: aa,
      y: ha,
      ja: Yn,
      V: Gn
    }, w = nt(), Y = l._free = (e) => (Y = l._free = w.oa)(e), Zr = l._malloc = (e) => (Zr = l._malloc = w.pa)(e), Oe = (e) => (Oe = w.ra)(e), m = (e, r) => (m = w.sa)(e, r), lr = (e) => (lr = w.ta)(e), T = () => (T = w.ua)(), P = (e) => (P = w.va)(e), We = (e) => (We = w.wa)(e), ke = (e) => (ke = w.xa)(e), Me = (e, r, t) => (Me = w.ya)(e, r, t), je = (e) => (je = w.za)(e);
    l.dynCall_viijii = (e, r, t, n, a, i, s) => (l.dynCall_viijii = w.Aa)(e, r, t, n, a, i, s), l.dynCall_jiji = (e, r, t, n, a) => (l.dynCall_jiji = w.Ba)(e, r, t, n, a);
    var Ie = l.dynCall_jiiii = (e, r, t, n, a) => (Ie = l.dynCall_jiiii = w.Ca)(e, r, t, n, a);
    l.dynCall_iiiiij = (e, r, t, n, a, i, s) => (l.dynCall_iiiiij = w.Da)(e, r, t, n, a, i, s), l.dynCall_iiiiijj = (e, r, t, n, a, i, s, o, u) => (l.dynCall_iiiiijj = w.Ea)(e, r, t, n, a, i, s, o, u), l.dynCall_iiiiiijj = (e, r, t, n, a, i, s, o, u, c) => (l.dynCall_iiiiiijj = w.Fa)(e, r, t, n, a, i, s, o, u, c);
    function qn(e, r) {
      var t = T();
      try {
        return b(e)(r);
      } catch (n) {
        if (P(t), n !== n + 0)
          throw n;
        m(1, 0);
      }
    }
    function Jn(e, r, t, n) {
      var a = T();
      try {
        b(e)(r, t, n);
      } catch (i) {
        if (P(a), i !== i + 0)
          throw i;
        m(1, 0);
      }
    }
    function Kn(e, r, t) {
      var n = T();
      try {
        b(e)(r, t);
      } catch (a) {
        if (P(n), a !== a + 0)
          throw a;
        m(1, 0);
      }
    }
    function Qn(e, r, t, n) {
      var a = T();
      try {
        return b(e)(r, t, n);
      } catch (i) {
        if (P(a), i !== i + 0)
          throw i;
        m(1, 0);
      }
    }
    function ra(e, r, t, n, a) {
      var i = T();
      try {
        return b(e)(r, t, n, a);
      } catch (s) {
        if (P(i), s !== s + 0)
          throw s;
        m(1, 0);
      }
    }
    function ea(e, r) {
      var t = T();
      try {
        b(e)(r);
      } catch (n) {
        if (P(t), n !== n + 0)
          throw n;
        m(1, 0);
      }
    }
    function ta(e, r, t) {
      var n = T();
      try {
        return b(e)(r, t);
      } catch (a) {
        if (P(n), a !== a + 0)
          throw a;
        m(1, 0);
      }
    }
    function na(e) {
      var r = T();
      try {
        b(e)();
      } catch (t) {
        if (P(r), t !== t + 0)
          throw t;
        m(1, 0);
      }
    }
    function aa(e, r, t, n, a, i, s, o, u, c, v) {
      var h = T();
      try {
        b(e)(r, t, n, a, i, s, o, u, c, v);
      } catch (p) {
        if (P(h), p !== p + 0)
          throw p;
        m(1, 0);
      }
    }
    function ia(e, r, t, n, a, i, s) {
      var o = T();
      try {
        return b(e)(r, t, n, a, i, s);
      } catch (u) {
        if (P(o), u !== u + 0)
          throw u;
        m(1, 0);
      }
    }
    function sa(e, r, t, n, a) {
      var i = T();
      try {
        b(e)(r, t, n, a);
      } catch (s) {
        if (P(i), s !== s + 0)
          throw s;
        m(1, 0);
      }
    }
    function oa(e, r, t, n, a, i) {
      var s = T();
      try {
        return b(e)(r, t, n, a, i);
      } catch (o) {
        if (P(s), o !== o + 0)
          throw o;
        m(1, 0);
      }
    }
    function ua(e, r, t, n, a, i, s, o) {
      var u = T();
      try {
        return b(e)(r, t, n, a, i, s, o);
      } catch (c) {
        if (P(u), c !== c + 0)
          throw c;
        m(1, 0);
      }
    }
    function la(e, r, t, n, a) {
      var i = T();
      try {
        return b(e)(r, t, n, a);
      } catch (s) {
        if (P(i), s !== s + 0)
          throw s;
        m(1, 0);
      }
    }
    function fa(e, r, t, n) {
      var a = T();
      try {
        return b(e)(r, t, n);
      } catch (i) {
        if (P(a), i !== i + 0)
          throw i;
        m(1, 0);
      }
    }
    function ca(e, r, t, n) {
      var a = T();
      try {
        return b(e)(r, t, n);
      } catch (i) {
        if (P(a), i !== i + 0)
          throw i;
        m(1, 0);
      }
    }
    function va(e) {
      var r = T();
      try {
        return b(e)();
      } catch (t) {
        if (P(r), t !== t + 0)
          throw t;
        m(1, 0);
      }
    }
    function da(e, r, t, n, a, i, s, o) {
      var u = T();
      try {
        b(e)(r, t, n, a, i, s, o);
      } catch (c) {
        if (P(u), c !== c + 0)
          throw c;
        m(1, 0);
      }
    }
    function pa(e, r, t, n, a, i, s, o, u, c, v, h) {
      var p = T();
      try {
        return b(e)(r, t, n, a, i, s, o, u, c, v, h);
      } catch (_) {
        if (P(p), _ !== _ + 0)
          throw _;
        m(1, 0);
      }
    }
    function ha(e, r, t, n, a, i, s, o, u, c, v, h, p, _, C, O) {
      var $ = T();
      try {
        b(e)(r, t, n, a, i, s, o, u, c, v, h, p, _, C, O);
      } catch (F) {
        if (P($), F !== F + 0)
          throw F;
        m(1, 0);
      }
    }
    function _a(e, r, t, n, a) {
      var i = T();
      try {
        return Ie(e, r, t, n, a);
      } catch (s) {
        if (P(i), s !== s + 0)
          throw s;
        m(1, 0);
      }
    }
    var Pr;
    er = function e() {
      Pr || Ue(), Pr || (er = e);
    };
    function Ue() {
      if (B > 0 || (ze(), B > 0))
        return;
      function e() {
        Pr || (Pr = !0, l.calledRun = !0, !ee && (Xe(), qr(l), l.onRuntimeInitialized && l.onRuntimeInitialized(), Ge()));
      }
      l.setStatus ? (l.setStatus("Running..."), setTimeout(function() {
        setTimeout(function() {
          l.setStatus("");
        }, 1), e();
      }, 1)) : e();
    }
    if (l.preInit)
      for (typeof l.preInit == "function" && (l.preInit = [l.preInit]); l.preInit.length > 0; )
        l.preInit.pop()();
    return Ue(), z.ready;
  };
})();
function Pa(M) {
  return ga(
    Fr,
    M
  );
}
function Ca(M) {
  return ya(
    Fr,
    M
  );
}
async function Aa(M, z) {
  return ma(
    Fr,
    M,
    z
  );
}
async function Ea(M, z) {
  return $a(
    Fr,
    M,
    z
  );
}
export {
  Ra as barcodeFormats,
  Da as binarizers,
  Oa as characterSets,
  Wa as contentTypes,
  ka as defaultDecodeHints,
  Ma as defaultReaderOptions,
  ja as eanAddOnSymbols,
  Pa as getZXingModule,
  Ia as purgeZXingModule,
  Ea as readBarcodesFromImageData,
  Aa as readBarcodesFromImageFile,
  Ua as readOutputEccLevels,
  Ca as setZXingModuleOverrides,
  Ha as textModes
};
